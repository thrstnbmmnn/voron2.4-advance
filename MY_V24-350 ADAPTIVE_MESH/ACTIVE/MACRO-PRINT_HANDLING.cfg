#.................................................................................................................
# -SuperSlicer's start print gcode should contain the following:  
#   PRINT_START BED_TEMP=[first_layer_bed_temperature] EXTRUDER_TEMP=[first_layer_temperature]  
# -Cura's start print gcode should contain the following:  
#   PRINT_START BED_TEMP={material_bed_temperature_layer_0} EXTRUDER_TEMP={material_print_temperature_layer_0}
#   !! The following optional parameters can be specified. If not specified, the values set in printer.cfg will be used.
#    -Optionally can specify EXTRUDER_READY temperature, just below extruding temperature. The goal is to get the
#     nozzle hot enough to almost start oozing. For example, if using 240 for normal extruding, something such as
#     EXTRUDER_READY=210 would be sufficient.
#    -Optionally can specify ENCLOSURE_TEMP temperature, as ENCLOSURE_TEMP=40
#    -Optionally can specify Minutes to Soak, as SOAK=15
# -SuperSlicer's & Cura's end print gcode should contain the following:
#   Use PRINT_END for the slicer ending script
#.................................................................................................................
# Required variable(s) to be set. Add the following to your global variable dictionary block as:
#
#[gcode_macro globalvariables]
#variable_defaultTempNozzle: 240        # The default Nozzle Extruding temperature if none is specified
#variable_defaultWarmNozzle: 160        # The default Nozzle Warming temperature if none is specified
#variable_defaultReadyNozzle: 210       # The default Nozzle Ready temperature if none is specified
#variable_defaultEnclosure: 40          # The default Enclosure temperature if none is specified
#variable_defaultTempBed: 110           # The default Bed temperature if none is specified
#variable_PurgeRetract: 0.1             # After completing purgeline, how much retraction to perform (Not normally needed)
#variable_EndRetract: 2.0               # After print has completed, how much retraction to perform
#variable_QGLbeforeSoakPrint: True      # (True/False) Perfrom QGL before applying heat soak for PRINT
#variable_PrePrintSoakMinutes: 15       # Minutes to heat-soak prior to printing
#variable_PostPrintCool: 1              # Post-Print cooling to prevent nozzle string, minutes of cooling
#variable_PostPrintParkCool: 2          # Once parks, minutes of cooling
#gcode:
#.................................................................................................................
# Required external macro(s) used by this macro set.
#
# _HEAT_WAIT
# _COOL_WAIT
# G32 (in MACRO-EUCLID.cfg)
# G3201 (in MACRO-EUCLID.cfg)
# CONFIG-NO_ENCLOSURE_CONTROL.cfg / CONFIG-ENCLOSURE_CONTROL.cfg for M141 command
# CURRENT_HIGH
# CURRENT_NORMAL
# PARK_UpperRight
# PARK_Center
#.................................................................................................................

[gcode_macro PRINT_START]
description: Performs all needed moves prior to printing
gcode:
    CLEAR_PAUSE
    BED_MESH_CLEAR
    M220 S100
    M221 S100
    SET_LED LED=nozzle RED=.2 GREEN=.2 BLUE=1
    {% set FL_SIZE = params.SIZE|default("0_0_0_0")|string %}
    _COMPUTE_MESH_PARAMETERS SIZE={FL_SIZE}
    {% set X_MID = printer.configfile.config["stepper_x"]["position_max"]|float / 2.0 %}
    {% set Y_MID = printer.configfile.config["stepper_y"]["position_max"]|float / 2.0 %}
    {% set defaultTN = printer["gcode_macro globalvariables"].defaulttempnozzle|float %}
    {% set defaultWN = printer["gcode_macro globalvariables"].defaultwarmnozzle|float %}
    {% set defaultRN = printer["gcode_macro globalvariables"].defaultreadynozzle|float %}
    {% set defaultSOAK = printer["gcode_macro globalvariables"].preprintsoakminutes|float %}
    {% set defaultENCLOSURE = printer["gcode_macro globalvariables"].defaultenclosure|float %}
    {% set purgeRetract = printer["gcode_macro globalvariables"].purgeretract|float %}
    {% set defaultTB = printer["gcode_macro globalvariables"].defaulttempbed|float %}
    {% set BED_TEMP = params.BED_TEMP|default(defaultTB)|float %}
    SET_GCODE_VARIABLE MACRO=_WAIT_Variable VARIABLE=ready VALUE={params.EXTRUDER_READY|default(defaultRN)|float}
    SET_GCODE_VARIABLE MACRO=_WAIT_Variable VARIABLE=temp VALUE={params.EXTRUDER_TEMP|default(defaultTN)|float}
    SET_GCODE_VARIABLE MACRO=_WAIT_Variable VARIABLE=filazcomp VALUE={params.FILAMENT_ZCOMP|default(0.00)|float}
    M118 gCode file passed filament offset of {params.FILAMENT_ZCOMP|default(0.00)|float}mm.

    {% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(defaultENCLOSURE)|float %}
    {% set SOAK = params.SOAK|default(defaultSOAK) %}
    M118 gCode file passed the following to PRINT_START:
    M118 { rawparams }

    # Bring bed to full temperature, only warm hotend
    M140 S{BED_TEMP}
    M104 S{defaultWN}
    M141 S{ENCLOSURE_TEMP}
    G90
    G21
    M83
    G92 E0.0
    # Reset the G-Code Z offset
    SET_GCODE_OFFSET Z=0.0
    CALIBRATE_Z
    M117 Performing initial homing.
    {% if printer["gcode_macro globalvariables"].qglbeforesoakprint|default() == true %}
        G32
        # Move the nozzle
        PARK_Center
      {% else %}
        G28
        # Not moving the probe if QGL was not peroformed
    {% endif %}
    M117 Bringing bed to temperature.
    SET_LED LED=nozzle INDEX=2 RED=1 GREEN=0 BLUE=0
    SET_LED LED=nozzle INDEX=1 RED=.5 GREEN=.5 BLUE=.5
    M190 S{BED_TEMP}
    _WAIT_Start MINUTES={SOAK}


[gcode_macro _PRINT_START2]
description: Part 2 - Performs all needed moves prior to printing
gcode:
    RESUME_BASE
    {% set EXTRUDER_READY = printer["gcode_macro _WAIT_Variable"].ready|int %}
    {% set EXTRUDER_TEMP = printer["gcode_macro _WAIT_Variable"].temp|int %}
    SET_LED LED=nozzle RED=.5 GREEN=0 BLUE=.5
    M117 Performing hot level.
    CURRENT_HIGH
    M400
    M104 S{EXTRUDER_READY}
    G3201
    M104 S{EXTRUDER_TEMP}
    G1 X0 Y20 F4000
    G1 Z1.5
    M117 Bringing nozzle to temperature.
    SET_LED LED=nozzle INDEX=2 RED=1 GREEN=0 BLUE=0
    SET_LED LED=nozzle INDEX=1 RED=.5 GREEN=.5 BLUE=.5
    M109 S{EXTRUDER_TEMP}
    SET_LED LED=nozzle RED=1 GREEN=0 BLUE=0
    _FILAMENT_READY
    M117 Commencing print.
    M118 Commencing print.
    SET_LED LED=nozzle RED=.5 GREEN=.5 BLUE=.5




#----------------------------------------- PURGE LINE & READY FOR PRINT -------------------------------------------- 
[gcode_macro _FILAMENT_READY]
description: Performs filament specific purgeline and readies for print
gcode:
    {% set Z_POS = printer.toolhead.position.z|float %}
    {% set FILAMENT_ZCOMP = printer["gcode_macro _WAIT_Variable"].filazcomp|float %}
    {% set NEW_CURRENT_Z = (Z_POS - FILAMENT_ZCOMP|float) %}
    {% set MeshToApply = printer["gcode_macro globalvariables"].meshtoapply|default() %}
    {% set Object_min_x = printer["gcode_macro _ADAPTIVE_MESH_VARIABLES"].obj_min_x|float %}
    {% set Object_min_y = printer["gcode_macro _ADAPTIVE_MESH_VARIABLES"].obj_min_y|float %}
    {% set X_MID = printer.configfile.config["stepper_x"]["position_max"]|float / 2.0 %}
    {% set Y_MID = printer.configfile.config["stepper_y"]["position_max"]|float / 2.0 %}
    {% set NZLD = printer.configfile.config["extruder"]["nozzle_diameter"]|float %}  
    {% set purgeRetract = printer["gcode_macro globalvariables"].purgeretract|float %}
    
    {% if FILAMENT_ZCOMP > 0.2 %}
        M118 FILAMENT_ZCOMP Offset > 0.2 - Ignoring FILAMENT_ZCOMP.
      {% elif FILAMENT_ZCOMP == 0 %}
        M118 FILAMENT_ZCOMP not set - Ignoring FILAMENT_ZCOMP.
      {% else %}
        M118 FILAMENT_ZCOMP Offset is: {FILAMENT_ZCOMP}
        M118 Setting current Z_Height of {Z_POS} to {NEW_CURRENT_Z}
        SET_KINEMATIC_POSITION Z={NEW_CURRENT_Z}
        G4 P1000
        M400
    {% endif %}
    
    SET_VELOCITY_LIMIT ACCEL={printer["gcode_macro globalvariables"].limitaccel|float} ACCEL_TO_DECEL={printer["gcode_macro globalvariables"].limitdecel|float}
    
    # Purge line start
    G1 X0 Y19.8 Z0.3 F1500.0
    G1 E{(12.5 * NZLD)} F3600
    M400    
    G1 X0 Y0 Z0.3 F1500.0
    G1 X130 Y0.0 Z0.3 F1500.0 E{(37.5 * NZLD)}
    G1 X130 Y0.3 Z0.3 F5000.0
    G1 X010 Y0.3 Z0.3 F1500.0 E{(75.0 * NZLD)}
    M400
    G92 E0
    # Purge line completed, now retract as defined
    G1 E-{purgeRetract} F3000
    G1 Z1.0 F3000
    {% if MeshToApply == "ADAPTIVE" %}
        G0 X{Object_min_x} Y{Object_min_y} F8000
      {% else %}
        G0 X{X_MID} Y{Y_MID} F8000
    {% endif %}



#.................................................................................................................
[gcode_macro PRINT_END]
description: Performs all needed actions upon completion of printing
gcode:
    SET_VELOCITY_LIMIT ACCEL={printer["gcode_macro globalvariables"].nplimitaccel|float} ACCEL_TO_DECEL={printer["gcode_macro globalvariables"].nplimitdecel|float}
    {% set EndRetract = printer["gcode_macro globalvariables"].endretract|float %}
    G91
    G0 Z5 F1000
    G90
    G92 E0                         ; zero the extruder
    G1 E-{EndRetract} F3600        ; retract filament
    M400
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    M400                           ; wait for buffer to clear
    TURN_OFF_HEATERS
    CURRENT_NORMAL
    _COOL_WAIT MINUTES={printer["gcode_macro globalvariables"].postprintcool|float}
    PARK_UpperRight
    M18 X Y E
    M107                           ; turn off fan
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    _COOL_WAIT MINUTES={printer["gcode_macro globalvariables"].postprintparkcool|float}
    SET_LED LED=nozzle RED=.2 GREEN=.5 BLUE=.2
    M117 Finished printing, check nozzle clear.
    M118 Finished printing, check nozzle clear.



#.................................................................................................................
[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    {% set x = params.X|default(0) %}        #edit to your park position
    {% set y = params.Y|default(20) %}       #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
      {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
        G1 E-{e} F2100
      {% else %}
        {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
        G1 Z{z_safe}
        G90
        G1 X{x} Y{y} F4000
      {% else %}
        {action_respond_info("Printer not homed")}
    {% endif %}



#.................................................................................................................
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    {% set e = params.E|default(1) %} #edit to your retract length
    {% if 'VELOCITY' in params|upper %}
        {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
      {%else %}
        {% set get_params = "" %}
    {% endif %}
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
        G1 E{e} F2100
      {% else %}
        {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}



#.................................................................................................................
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    SET_VELOCITY_LIMIT ACCEL={printer["gcode_macro globalvariables"].nplimitaccel|float} ACCEL_TO_DECEL={printer["gcode_macro globalvariables"].nplimitdecel|float}
    {% set EndRetract = printer["gcode_macro globalvariables"].endretract|float %}
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-{EndRetract} F3600        ; retract filament
    CLEAR_PAUSE
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE
    CURRENT_NORMAL
    M106 S250
    G90
    PARK_UpperRight
    M18 X Y E
    M107                           ; turn off fan
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    _COOL_WAIT MINUTES={printer["gcode_macro globalvariables"].postprintparkcool|float}
    SET_LED LED=nozzle RED=.2 GREEN=.5 BLUE=.2
    M117 Cancelled print, check nozzle clear.
    M118 Cancelled print, check nozzle clear.
    
    
[z_calibration]
## update these variable according to the documentation here https://github.com/protoloft/klipper_z_calibration
## you then should call CALIBRATE_Z as one of the last lines on your PRINT_START to set the Z offset dinamically

#   The X and Y coordinates (in mm) for clicking the nozzle on the
#   Z endstop.
probe_nozzle_x: 238
probe_nozzle_y: 350
#   The X and Y coordinates (in mm) for clicking the probe's switch body
#   on the Z endstop.
probe_switch_x: 233
probe_switch_y: 329
#   The X and Y coordinates (in mm) for probing on the print surface
#   (e.g. the center point) These coordinates will be adapted by the
#   probe's X and Y offsets. The default is the relative_reference_index
#   of the configured bed_mesh. It will raise an error if there is no
#   probe_bed site and no bed_mesh with a relative_reference_index
#   configured.
#probe_bed_x: YOUR VALUES HERE
#probe_bed_y: YOUR VALUES HERE
#   The trigger point offset of the used switch.
#   This needs to be fined out manually. For more details go to 
#   https://github.com/protoloft/klipper_z_calibration#switch-offset
#   "So, with a smaller offset value, the nozzle is more away from the 
#   bed! The value cannot be negative."
switch_offset: 0.420
#   The maximum allowed deviation of the calculated offset.
#   If the offset exceeds this value, it will stop!
#   The default is 1.0 mm.
max_deviation: 5.0
#   The number of times to probe each point. The probed z-values
#   will be averaged. The default is from the probe's configuration.
#samples: default from "probe:samples" section
#   The maximum Z distance (in mm) that a sample may differ from other
#   samples. The default is from the probe's configuration.
#samples_tolerance: default from "probe:samples_tolerance" section
#   The number of times to retry if a sample is found that exceeds
#   samples_tolerance. The default is from the probe's configuration.
#samples_tolerance_retries: default from "probe:samples_tolerance_retries" section
#   The calculation method when sampling more than once - either
#   "median" or "average". The default is from the probe's configuration.
#samples_result: default from "probe:samples_result" section
#   The distance in mm to move up before moving to the next
#   position. The default is two times the z_offset from the probe's
#   configuration.
clearance: 7.5
#position_min: default from "stepper_z:position_min" section.
#   The moving speed in X and Y. The default is 50 mm/s.
speed: 300
#   Speed (in mm/s) of the Z axis when lifting the probe between
#   samples and clearance moves. The default is from the probe's
#   configuration.
#lift_speed: default from "probe:lift_speed" section
#   The fast probing speed (in mm/s) used, when probing_first_fast
#   is activated. The default is from the Z rail configuration.
#probing_speed: default from "stepper_z:homing_speed" section.
#   The slower speed (in mm/s) for probing the recorded samples.
#   The default is second_homing_speed of the Z rail configuration.
#probing_second_speed: default from "stepper_z:second_homing_speed" section.
#   Distance to back off (in mm) before probing the next sample.
#   The default is homing_retract_dist from the Z rail configuration.
#probing_retract_dist: default from "stepper_z:homing_retract_dist" section.
#   If true, the first probing is done faster by the probing speed.
#   This is to get faster down and the result is not recorded as a
#   probing sample. The default is false.
probing_first_fast: false
#   If true, the first probing is done faster by the probing speed.
#   This is to get faster down and the result is not recorded as a
#   probing sample. The default is false.

start_gcode: Dock_Probe_Unlock
#   A list of G-Code commands to execute prior to each calibration command.
#   See docs/Command_Templates.md for G-Code format. This can be used to
#   attach the probe.
before_switch_gcode: Attach_Probe
#   A list of G-Code commands to execute prior to each probing on the
#   mag-probe. See docs/Command_Templates.md for G-Code format. This can be
#   used to attach the probe after probing on the nozzle and before probing
#   on the mag-probe.
end_gcode: Dock_Probe
#   A list of G-Code commands to execute after each calibration command.
#   See docs/Command_Templates.md for G-Code format. This can be used to
#   detach the probe afterwards.

[gcode_macro CALIBRATE_Z]
rename_existing: BASE_CALIBRATE_Z
gcode:
    M117 Z-Calibration..
    SET_GCODE_OFFSET Z=0
    BASE_CALIBRATE_Z
    M117
 
