#.................................................................................................................
# EUCLID Probe (GANTRY MOUNTED) Klipper configurations, settings, and support macros.
#
# About: This bundle contains all the necessary Klipper configurations and macros to use the Euclid Probe with the
#   dock mounted to the GANTRY. In this configuration the Z-Endstop switch has been eliminated, therefore no
#   compensation is needed. The G3201 command inlcuded in this varient performs the same function as a G32 but
#   handles mesh application per defined settings.
#
#
#                                  ---------------------------------
#                                  |Dock(GM)                      *| Home Y/X
#                                  |                               |
#                                  |                               |
#                                  |                               |
#                                  |             Home              |
#                                  |               Z               |
#                                  |                               |
#                                  |                               |
#                                  |                               |
#                                  |                               |
#                                  |                               |
#                                  ---------------------------------
#                                               Front
#
#  
# NOTE: If copying the Euclid macro into your existing setup, check the following:
# Do include QUERY_PROBE in your startup macro. If you do not have one, follows is a simple example you can use.
# 
#     [delayed_gcode prerun]  
#     initial_duration: 1  
#     gcode:  
#          QUERY_PROBE  
#          M117 Printer online.  
#
# Ensure [stepper_z] has endstop_pin defined as follows:
#     endstop_pin: probe:z_virtual_endstop
#
#  ! ! ! Before wiring up to the the probe, please read the pertinent documentation here: http://euclidprobe.github.io/ ! ! !
#    ! ! ! Following probe wiring or macro modification, you must be ready to emergency stop the printer when testing ! ! !
#          When testing the probe, have at least 100mm space between probe and plate, use your finger to depress probe
#          switch, if it doesn't stop, hit emergency stop and verify setup.
#
#.................................................................................................................
# Required variable(s) to be set. Add the following to your global variable dictionary block as:
#
[gcode_macro globalvariables]
##------------------------------------------------- EUCLID PROBE -------------------------------------------------- 
variable_EuclidX: 51.8                    # X Position directly over probe
variable_EuclidY: 350                  # Y Position directly over probe
variable_EuclidSwipeX: 40              # X Position, swipe to the side to free probe of dock
variable_EuclidClearY : 320            # Y Position, clear dock
variable_ZprobeSpeed: 5.0              # [Z-Probe before print] Probing speed for Z Measurements
variable_ZprobeSamples: 7              # [Z-Probe before print] Samples probed per position, yeilding as calculated median
variable_ZprobeTolerance: 0.050        # [Z-Probe before print] Sample Tolerance per Z Point
variable_ZprobeRetract: 2.5            # [Z-Probe before print] Retract from each probing for a D2F-5 1.2 should be good 
#
##----------------------------------------------------- MESH ------------------------------------------------------- 
variable_MeshToApply: "VORONMESH"       # The saved mesh to apply after performing QGL. The mesh name must be enclosed
#                                       # with "". The external HOTMESH macro will save it's results as the name
#                                       # specified at the time of use, defaulting to this variable if none is specified.
#                                       # *!* To perform a fresh in-situation mesh calibration, instead of loading a saved
#                                       # mesh, use "INSITU" for MeshToApply. This will be applied before Z Comp probing.
#                                       # *!* To completely skip applying mesh, use "NONE" for MeshToApply
#gcode:
#.................................................................................................................
# Required external macro(s) used by this macro set.
#
# ---NONE---
#.................................................................................................................


#.................................................................................................................
# Included macro commands in this bundle
#.................................................................................................................
# G3201 - No additional options / Usage: G3201
#   Same function as a G32 but handles mesh application per defined settings
#.................................................................................................................
# G32 - No additional options / Usage: G32
#   Homes the toolhead, performs quad gantry leveling, and homes again.
#.................................................................................................................
# M401 - No additional options / # Usage: M401
#   Attach the Euclid probe to the toolhead.
#.................................................................................................................
# M402 - No additional options / Usage: M402
#   Remove the Euclid probe from the toolhead by placing it in the dock.



[force_move]
enable_force_move: true


#.................................................................................................................
[probe]
# KLICKY_Probe
pin: ^PG15
x_offset: 0
y_offset: 25.0
# z_offset: 8.06  # <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< overridden by main printer.cfg  <<<
speed: 15.0
lift_speed: 40.0
samples: 5
samples_result: median
sample_retract_dist: 2.0
samples_tolerance: 0.010
samples_tolerance_retries: 15



#.................................................................................................................
[homing_override]
axes: z
gcode:
    {% set KEEP_PROBE = params.KEEP_PROBE|default(FALSE) %}
    {% set GOT_PROBE = params.GOT_PROBE|default(FALSE) %}
    {% set ONLY_Z = params.ONLY_Z|default(FALSE) %}
    {% set Z_POS = printer.toolhead.position.z %}
    {% set X_MID = printer.configfile.config["stepper_x"]["position_max"]|float / 2.0 %}
    {% set X_PROBEOFFSET = printer.configfile.config["probe"]["x_offset"]|float %}
    {% set Y_MID = printer.configfile.config["stepper_y"]["position_max"]|float / 2.0 %}
    {% set Y_PROBEOFFSET = printer.configfile.config["probe"]["y_offset"]|float %}
    {% if printer.toolhead.homed_axes != "xyz" %} ; Check if not already homed
        SET_KINEMATIC_POSITION Z=0
        G0 Z15 F3600        ; Raise toolhead 15mm since unknown/not homed
      {% else %}
        {% if Z_POS < 15 %}
            G90
            G0 Z15          ; Make sure Z height is at least 15mm
          {% else %}
            G91
            G0 Z1 F3600     ; If Z was above 15mm, raise by 1mm for safety
            G90
        {% endif %}
    {% endif %} 
    G90
    M118 Currently homed: { printer.toolhead.homed_axes }
    {% if printer.toolhead.homed_axes == "xyz" and ONLY_Z %}
        M118 Re-Homing skipped on X & Y.
      {% else %}
        G28 X Y            ; Home X & Y
    {% endif %}
    {% if GOT_PROBE == FALSE %}
        M401               ; Deploy Probe
    {% endif %}
    G0 X{(X_MID - X_PROBEOFFSET)} Y{(Y_MID - Y_PROBEOFFSET)} F4000
    G28 Z                  ; Home Z
    G0 Z15 F3600           ; Raise gantry
    {% if KEEP_PROBE == FALSE %}
        M402               ; Stow Probe
    {% endif %}



#.................................................................................................................
# M401 - Deploy Euclid Probe
[gcode_macro M401]
description: Deploys the Euclid probe
gcode:
    QUERY_PROBE
    {% set Z_POS = printer.toolhead.position.z %}
    {% if printer.probe.last_query %}
        M118 Fetching Euclid Probe.
        {% if printer.toolhead.homed_axes != "xyz" %} ; Check if not already homed
            SET_KINEMATIC_POSITION Z=0
            G0 Z15 F3600        ; Raise toolhead 15mm since unknown/not homed
            G28X
            G28Y
        {% endif %}
        G90
        {% if Z_POS < 15 %} G0 Z15 {% endif %}
        _PROBE_DEPLOY
      {% else %}
        M118 ?!Attempted to Deploy probe but it is already attached.
    {% endif %}



#.................................................................................................................
# M402 - Stow Euclid Probe
[gcode_macro M402]
description: Stows the Euclid probe
gcode:
    QUERY_PROBE
    {% set Z_POS = printer.toolhead.position.z %}
    {% if not printer.probe.last_query %}
        M118 Stowing Euclid Probe.
        {% if printer.toolhead.homed_axes != "xyz" %} G28 {% endif %} ; Try to home if not already homed
        G90
        {% if Z_POS < 15 %} G0 Z15 {% endif %}
        _PROBE_STOW
      {% else %}
        M118 ?!Attempted to Stow probe but it is not attached.
    {% endif %}



#.................................................................................................................
[gcode_macro _PROBE_DEPLOY]
gcode:
    G90
    G0 Y{printer["gcode_macro globalvariables"].euclidcleary|float} F4000
    G0 X{printer["gcode_macro globalvariables"].euclidx|float} F4000
    G0 Y{printer["gcode_macro globalvariables"].euclidy|float} F4000
    G0 X{printer["gcode_macro globalvariables"].euclidswipex|float} F4000
    _error_if_probe_not_deployed ; Verify probe attached



#.................................................................................................................
[gcode_macro _PROBE_STOW]
gcode:
    G90
    G0 X{printer["gcode_macro globalvariables"].euclidswipex|float} F4000
    G0 Y{printer["gcode_macro globalvariables"].euclidy|float} F4000
    G0 X{printer["gcode_macro globalvariables"].euclidx|float} F2000
    G0 Y{printer["gcode_macro globalvariables"].euclidcleary|float} F4000
    _error_if_probe_deployed ; Verify probe detached



#.................................................................................................................
# Euclid probe safety checks block

[gcode_macro _do_error_if_probe_deployed]
gcode:
    {% if not printer.probe.last_query %}
        {action_raise_error("ERROR: Probe is still deployed, please remove and return to dock.")}
      {% else %}
        M118 Euclid probe has been stowed.  
    {% endif %}	

[gcode_macro _error_if_probe_deployed]
gcode:
    G4 P300
    QUERY_PROBE
    _do_error_if_probe_deployed

[gcode_macro _do_error_if_probe_not_deployed]
gcode:
    {% if printer.probe.last_query %}
        {action_raise_error("ERROR: Probe unsuccessfully deployed, please check printer.")}
      {% else %}
        M118 Euclid probe has been attached.
    {% endif %}

[gcode_macro _error_if_probe_not_deployed]
gcode:
    G4 P300
    QUERY_PROBE
    _do_error_if_probe_not_deployed
    
    
    
#.................................................................................................................
[gcode_macro QUAD_GANTRY_LEVEL]
rename_existing: QUAD_GANTRY_LEVEL_ORIGINAL
description: Levels the four Z-axis gantry corners
gcode:
    {% if printer.toolhead.homed_axes != "xyz" %} ; Home if not already homed
        G28 KEEP_PROBE:TRUE
    {% endif %} 
    M401
    QUAD_GANTRY_LEVEL_ORIGINAL
    M402



#.................................................................................................................
[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BED_MESH_CALIBRATE_ORIGINAL
description: Performs bed mesh
gcode:
    QUERY_PROBE
    M401
    BED_MESH_CALIBRATE_ORIGINAL
    M402



#.................................................................................................................
[gcode_macro G32]
description: Clears bed-mesh and performs G28, QGL, G28
gcode:
    BED_MESH_CLEAR
    G28 KEEP_PROBE:TRUE
    QUAD_GANTRY_LEVEL_ORIGINAL
    G28 GOT_PROBE:TRUE
    QUERY_PROBE



#.................................................................................................................
[gcode_macro G3201]
description: Clears bed-mesh and performs G28, QGL, G28-Z, Probes Center, and applies bed-mesh
gcode:
    {% set MeshToApply = printer["gcode_macro globalvariables"].meshtoapply|default() %}
    {% set X_MeshCenter = printer["gcode_macro _ADAPTIVE_MESH_VARIABLES"].mesh_xcenter|float %}
    {% set Y_MeshCenter = printer["gcode_macro _ADAPTIVE_MESH_VARIABLES"].mesh_ycenter|float %}
    {% set X_MID = printer.configfile.config["stepper_x"]["position_max"]|float / 2.0 %}
    {% set X_PROBEOFFSET = printer.configfile.config["probe"]["x_offset"]|float %}
    {% set Y_MID = printer.configfile.config["stepper_y"]["position_max"]|float / 2.0 %}
    {% set Y_PROBEOFFSET = printer.configfile.config["probe"]["y_offset"]|float %}
    {% set ZSpeed = printer["gcode_macro globalvariables"].zprobespeed|float %}
    {% set ZSamples = printer["gcode_macro globalvariables"].zprobesamples|int %}
    {% set ZTolerance = printer["gcode_macro globalvariables"].zprobetolerance|float %}
    {% set ZRetract = printer["gcode_macro globalvariables"].zproberetract|float %}
    {% set S_Retries = printer.configfile.config["probe"]["samples_tolerance_retries"]|int %}
    BED_MESH_CLEAR
    G28 KEEP_PROBE:TRUE
    QUAD_GANTRY_LEVEL_ORIGINAL
    G0 Z15 F3600
    {% if MeshToApply == "ADAPTIVE" %}
        G0 X{(X_MeshCenter - X_PROBEOFFSET)} Y{(Y_MeshCenter - Y_PROBEOFFSET)} F4000
        M118 ADAPTIVE: Moving to X{(X_MeshCenter - X_PROBEOFFSET)} Y{(Y_MeshCenter - Y_PROBEOFFSET)} to probe Z0.
      {% else %}
        G0 X{(X_MID - X_PROBEOFFSET)} Y{(Y_MID - Y_PROBEOFFSET)} F4000
        M118 Moving to X{(X_MeshCenter - X_PROBEOFFSET)} Y{(Y_MeshCenter - Y_PROBEOFFSET)} to probe Z0.
      {% endif %}
    PROBE samples_result=median samples={ZSamples} speed={ZSpeed} samples_tolerance={ZTolerance} samples_tolerance_retries={S_Retries} sample_retract_dist={ZRetract}
    _CHECK_PROBE3201


[gcode_macro _CHECK_PROBE3201]
gcode:
    {% set PASS = printer.probe.last_z_result %}
    {% set ZP_CAL = printer.configfile.config["probe"]["z_offset"]|float %}
    {% set MeshToApply = printer["gcode_macro globalvariables"].meshtoapply|default() %}
    {% set Z_POS = printer.toolhead.position.z|float %}
    {% set Z_DIFFERENCE = PASS - ZP_CAL|float %}
    {% set NEW_CURRENT_Z = (Z_POS - Z_DIFFERENCE) %}
    M118 Current Probing is: {PASS}
    M118 Z-Probe Offset is: {ZP_CAL}
    M118 Difference: {Z_DIFFERENCE}
        M118 Setting current Z_Height of {Z_POS} to {NEW_CURRENT_Z}
        SET_KINEMATIC_POSITION Z={NEW_CURRENT_Z}
        G4 P100
        M118 Moving nozzle to newly adjusted Z15.
        G0 Z15 F500
        G4 P1000
    {% if MeshToApply != "NONE" %}
        {% if MeshToApply == "INSITU" %}
            M118 Performing INSITU Mesh.
            BED_MESH_CALIBRATE_ORIGINAL
            BED_MESH_PROFILE SAVE=INSITU
          {% elif MeshToApply == "ADAPTIVE" %}
            M118 Performing ADAPTIVE Mesh.
            _ADAPTIVE_BED_MESH
          {% else %}
            M118 Applied {MeshToApply} Mesh.
            BED_MESH_PROFILE LOAD={MeshToApply}
        {% endif %}
    {% endif %}
    QUERY_PROBE
    {% if not printer.probe.last_query %}
        M118 Stowing Euclid Probe.
        _PROBE_STOW
      {% else %}
        M118 ?!Probe is not attached.
    {% endif %}
